name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  ci:
    strategy:
      matrix:
        include:
          - endpoint_uuid: '9edd8398-6091-4138-abd8-e6ea11c5601c'
            user_endpoint_config: '{ "WORKER_INIT": "export MGLTOOLS_HOME=/home/cc/miniconda3/envs/parsldockenv PD_CACHE=/home/cc/pd_cache", "WORKING_DIR": "/home/cc" }'
            clone_endpoint_config: '{ "WORKING_DIR": "/home/cc"}'
            pd_cache: /home/cc/pd_cache
          - endpoint_uuid: '49c363fc-27f2-4cd2-ac6c-61e9a70fef11'
            user_endpoint_config: '{ "PROVIDER": "compute", "WORKER_INIT": "export MGLTOOLS_HOME=/scratch/user/u.vh86741/.conda/envs/parsldockenv PD_CACHE=/scratch/user/u.vh86741/pd_cache", "WORKING_DIR": "/scratch/user/u.vh86741/" }'
            clone_endpoint_config: '{ "WORKING_DIR": "/scratch/user/u.vh86741/", "PROVIDER": "login"}'
            pd_cache: /scratch/user/u.vh86741/pd_cache
    #       - endpoint_uuid: '01a2589a-25bb-4956-8f65-bbef9e328ed6'
    #         user_endpoint_config: '{ "WORKER_INIT": "export MGLTOOLS_HOME=/scratch/midway2/vhayot/miniconda3/envs/parsldockenv", "WORKING_DIR": "/scratch/midway2/vhayot/" }'
    #         clone_endpoint_config: '{ "WORKER_INIT": "export PATH=/software/git-2.10-el7-x86_64/bin/:$PATH", "WORKING_DIR": "/scratch/midway2/vhayot/"}'
    # name: Rux tox
    runs-on: ubuntu-latest
    environment: hpcci

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11.4'
          cache: 'pip'
      - name: execute tests
        id: pytest
        uses: ValHayot/globus-compute-github-action@v1
        with:
          client_id: ${{ secrets.GLOBUS_COMPUTE_CLIENT_ID }}
          client_secret: ${{ secrets.GLOBUS_COMPUTE_CLIENT_SECRET }}
          endpoint_uuid: ${{ matrix.endpoint_uuid }}
          shell_cmd: "cd gc-action-temp/parsl-docking-tutorial && pip install --no-index --find-links=${{ matrix.pd_cache }} . pytest && pytest --durations=0"
          user_endpoint_config: ${{ matrix.user_endpoint_config }}
          clone_endpoint_config: ${{ matrix.clone_endpoint_config }}
      - name: Archive output stdout
        uses: actions/upload-artifact@v4
        with:
          name: pytest-stdout
          path: ${{ steps.pytest.outputs.stdout }}
      - name: Archive output stderr
        uses: actions/upload-artifact@v4
        with:
          name: pytest-stderr
          path: ${{ steps.pytest.outputs.stderr }}
      - name: Print Output
        id: output
        run: echo "${{ steps.test-action.outputs.response }}"
